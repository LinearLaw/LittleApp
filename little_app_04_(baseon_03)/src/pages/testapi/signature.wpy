<template>
  <view class='container'>
    <view class="view_box">请在此处签名</view>
    <canvas class='firstCanvas' id="firstCanvas" canvas-id="firstCanvas" bindtouchmove='move' bindtouchstart='start' bindtouchend='end'
      bindtouchcancel='cancel' bindlongtap='tap' disable-scroll='true' binderror='error'>
    </canvas>
    <view class="view_box"><button class="btn" bindtap='clearClick'>清除</button></view>
    <view class="view_box"><button class="btn btn_primary" bindtap='saveClick'>预览签名</button></view>
    <image id='signatureImg' src='{{signImage}}'></image>
  </view>
</template>
<script>
  import wepy from 'wepy';
  var content = null;
  var touchs = [];
  var canvasw = 0;
  var canvash = 0;

  export default class Signature extends wepy.page {
    config = {};
    components = {};
    data = {
      signImage: '',
    };
    events = {};
    methods = {
      start: function (event) {
        //获取触摸开始的 x,y
        let point = {
          x: event.changedTouches[0].x,
          y: event.changedTouches[0].y
        }
        touchs.push(point);
      },
      // 画布的触摸移动手势响应
      move: function (e) {
        let point = {
          x: e.touches[0].x,
          y: e.touches[0].y
        }
        touchs.push(point)
        if (touchs.length >= 2) {
          this.draw(touchs)
        }
      },
      
      cancel: function (e) {
        // console.log("触摸取消", e)
      },
      
      tap: function (e) {
        // console.log("长按手势", e)
      },
      error: function (e) {
        // console.log("画布触摸错误", e)
      },
      
      end: function (e) {
        // console.log("触摸结束", e)
        //清空轨迹数组
        for (let i = 0; i < touchs.length; i++) {
          touchs.pop()
        }
      },
    };
    async onShow() {}
    async onLoad(options) {
      //获得Canvas的上下文
      content = wx.createCanvasContext('firstCanvas');
      //设置线的颜色
      content.setStrokeStyle("#666");
      //设置线的宽度
      content.setLineWidth(3);
      //设置线两端端点样式更加圆润
      content.setLineCap('round');
      //设置两条线连接处更加圆润
      content.setLineJoin('round');

      let query = wx.createSelectorQuery();
      query.select('#firstCanvas').boundingClientRect(function (rect) {
        canvasw = rect.width;
        canvash = rect.height;
      }).exec()
    }
    draw(touchs) {
      let point1 = touchs[0]
      let point2 = touchs[1]
      touchs.shift()
      content.moveTo(point1.x, point1.y)
      content.lineTo(point2.x, point2.y)
      content.stroke()
      content.draw(true)
    }
    clearClick() {
      //清除画布
      content.clearRect(0, 0, canvasw, canvash)
      content.draw(true)
    }
    saveClick() {
      var that = this
      wx.canvasToTempFilePath({
        canvasId: 'firstCanvas',
        success: function (res) {
          console.log(res.tempFilePath);
          //设置保存的图片
          that.setData({
            signImage: res.tempFilePath
          })
        }
      })
    }
  }

</script>
<style>
  .firstCanvas {
    background-color: #e2e2e1;
    width: 100%;
    height: 200px;
    margin-bottom:10px;
  }

  image {
    width: 100%;
    height: 200px;
    background-color: #fff;
  }

</style>
